name: Fly Production Deploy

on:
  push:
    branches:
      - prod

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if only docs were changed
        id: check_files
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Check if only doc files changed
          ONLY_DOCS="true"
          for file in $CHANGED_FILES; do
            if [[ ! "$file" =~ \.(md)$ && ! "$file" =~ ^dev-notes/ ]]; then
              ONLY_DOCS="false"
              break
            fi
          done

          echo "only_docs=${ONLY_DOCS}" >> "$GITHUB_OUTPUT"

          if [[ "$ONLY_DOCS" == "true" ]]; then
            echo "Only documentation files were changed. Deployment will be skipped."
          else
            echo "Non-documentation files were changed. Deployment will proceed."
          fi

      - uses: superfly/flyctl-actions/setup-flyctl@master
        if: steps.check_files.outputs.only_docs != 'true'

      - name: Deploy to Fly.io
        if: steps.check_files.outputs.only_docs != 'true'
        run: flyctl deploy --remote-only -c fly.production.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Ensure Laravel required directories exist (after deploy)
        if: steps.check_files.outputs.only_docs != 'true'
        run: |
          flyctl ssh console -a akluma-prod --command 'sh -c "
            mkdir -p storage/framework/views &&
            mkdir -p storage/framework/cache &&
            mkdir -p storage/framework/sessions &&
            mkdir -p storage/framework/testing &&
            mkdir -p bootstrap/cache &&
            chmod -R 775 storage bootstrap/cache
          "'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Laravel Optimize
        if: steps.check_files.outputs.only_docs != 'true'
        run: |
          flyctl ssh console -a akluma-prod --pty --command 'sh -c "
            php artisan optimize:clear &&
            php artisan config:cache &&
            php artisan view:cache &&
            php artisan route:cache
          "'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Run Migrations
        if: steps.check_files.outputs.only_docs != 'true'
        run: flyctl ssh console -a akluma-prod --command "php artisan migrate --force"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Ensure cron machine is updated to trigger setup script
        if: steps.check_files.outputs.only_docs != 'true'
        run: |
          TIMESTAMP=$(date +%s)
          flyctl machines update 90802551c57e87 \
            --app akluma-prod \
            --metadata manual_restart=${TIMESTAMP} \
            --yes
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

