name: Fly Staging Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Skip deploy if only docs were changed
        id: check_docs_only
        run: |
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
            echo "Changed files:"
            echo "$CHANGED_FILES"

            ONLY_DOCS=true
            for file in $CHANGED_FILES; do
            if [[ "$file" != *.md && "$file" != dev-notes/* ]]; then
             ONLY_DOCS=false
             break
            fi
            done

            echo "only_docs=$ONLY_DOCS" >> $GITHUB_OUTPUT

      - name: Cancel deploy if only docs changed
        if: steps.check_docs_only.outputs.only_docs == 'true'
        run: |
          echo "Skipping deploy: only docs were changed."
          exit 0

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only -c fly.staging.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_STAGING }}

      - name: Wait for Fly VM to become healthy
        run: flyctl wait --app akluma-staging --timeout 60
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_STAGING }}

      - name: Ensure Laravel required directories exist (after deploy)
        run: |
          flyctl ssh console -a akluma-staging --command 'sh -c "
            mkdir -p storage/framework/views &&
            mkdir -p storage/framework/cache &&
            mkdir -p storage/framework/sessions &&
            mkdir -p storage/framework/testing &&
            mkdir -p bootstrap/cache &&
            chmod -R 775 storage bootstrap/cache
          "'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_STAGING }}

      - name: Laravel Optimize
        run: |
          flyctl ssh console -a akluma-staging --pty --command 'sh -c "
            php artisan optimize:clear &&
            php artisan config:cache &&
            php artisan view:cache &&
            php artisan route:cache
          "'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_STAGING }}

      - name: Run Migrations
        run: flyctl ssh console -a akluma-staging --command "php artisan migrate --force"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_STAGING }}
